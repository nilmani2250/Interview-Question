Write a program null pointer?

#include<stdio.h>
void main()
{
	int *ptr=NULL;
	if(ptr!=NULL)
	{
		printf("value of ptr:%d\n",*ptr);
	}
	else
	{
		printf("ptr is null pointer\n");
	}
}

Write a program volatile?

#include<stdio.h>
void main()
{
	volatile int a=0;
	while(a<10)
	{
	printf("value of a:%d\n",a);
	a++;
	}
}

Write a program static variable?

#include<stdio.h>
int fun()
{
	static int count=0;
	count++;
	return count;
}
int main()
{
	printf("%d\n,fun());
	printf("%d\n,fun());
}

Write a program static function

#include<stdio.h>
static int add(int a,int b);
int main()
{
	int a,b;
	printf("Enter the two number\n");
	scanf("%d %d\n,&a,&b);
	add(a,b);
}
int add(int x,int y)
{
	int sum=0;
	sum=x+y;
	printf("%d\n",sum);
}


Write a program call by value?

#include<stdio.h>
void swap(int a,int b)
{
	int temp=a;
	a=b;
	b=temp;
}
void main()
{
	int x=10;
	int y=20;
	printf("Before swap:%d %d\n",x,y);
	swap(x,y);
	printf("After swap:%d %d\n",x,y);
}

Write a program call by address?

#include<stdio.h>
void swap(int *a,int *b)
{
	int temp=*a;
	*a=*b;
	*b=temp;
}
void main()
{
	int x=10;
	int y=20;
	printf("Before swap:%d %d\n",x,y);
	swap(&x,&y);
	printf("After swap:%d %d\n",x,y);
}

Write a program bit field?
#include<stdio.h>
struct date
{
	int d:5;
	int m:4;
	int y;
};
void main()
{
struct date d1={14,05,2023};
printf("%d %d %d\n",d1.d,d1.m,d1.y);
printf("%ld",sizeof(struct date));
}

Write a program structure?

#include<stdio.h>
struct A
{
	char ch;
	int i;
	float f;
}
void main()
{
	struct A B={'C',23,23.5};
	printf("%c %d %f\n",B.ch,&B.i,&B.f);
}

Write a program sum of array?

#include<stdio.h>
void main()
{
	int a[5];
	int ele,i,sum=0;
	ele=sizeof(a)/sizeof(a[0]);
	printf("Enter the array\n");
	for(i=0;i<ele;i++)
	scanf("%d",&a[i]);
	for(i=0;i<ele;i++
	{
	sum=sum+a[i];
	}
	printf("%d",sum);
}

Write a program array duplicate?

#include<stdio.h>
void main()
{
	int a[5];
	int ele,i,j;
	ele=sizeof(a)/sizeof(a[0]);
	printf("Enter the array\n");
	for(i=0;i<ele;i++)
	scanf("%d",&a[i]);
 	printf("duplicate of array\n");
	for(i=0;i<ele;i++)
	{
	for(j=i+1;j<ele;j++)
	{
		if(a[i]==a[j])
	{
	printf("%d\n",a[i]);
}
}
}
}

Write a program smallest array?

#include<stdio.h>
void main()
{
	int a[5];
	int ele,i,s;
	ele=sizeof(a)/sizeof(a[0]);
	printf("Enter the number\n");
	for(i=0;i<ele;i++)
	scanf("%d",&a[i]);
	s=a[0];
	for(i=0;i<ele;i++)
	{
		if(a[i] <s)
	{
		s=a[i];
	}
	}
	printf(" smallest:%d\n",s);
}


Write a program Largest array?

#include<stdio.h>
void main()
{
	int a[5];
	int ele,i,l;
	ele=sizeof(a)/sizeof(a[0]);
	printf("Enter the array\n");
	for(i=0;i<ele;i++)
	scanf("%d",&a[i]);
	l=a[i];

	for(i=0;i<ele;i++)
	{
		if(a[i] > l)
	{
		s=a[i];
	}
	}
	printf("Largest:%d\n",l);
}


Write a program array reverse?

#include<stdio.h>
void main()
{
	int a[5];
	int ele,i,j,t;
	ele=sizeof(a)/sizeof(a[0]);
	printf("Enter the array\n");
	for(i=0;i<ele;i++)
	scanf("%d",&a[i]);
	
	printf("Before reverse\n");
	for(i=0;i<ele;i++)
	printf("%d ",a[i]);
	printf("\n");

	for(i=0,j=ele-1;i<j;;i++,j--)
	{
		t=a[i];
		a[i]=a[j];
		a[j]=t;
	}

	printf("After reverse\n");
	for(i=0;i<ele;i++)
	printf("%d ",a[i]);
	printf("\n");
}

Write a program array reverse with fubction?

#include<stdio.h>
void array(int *,int);
void reverse(int *,int);
void main()
{
	int a[5];
	int ele,i;
	ele=sizeof(a)/sizeof(a[0]);
	printf("Enter the array\n");
	for(i=0;i<ele;i++)
	scanf("%d",&a[i]);
	
	printf("Before reverse\n");
	void array(a,ele);
	void reverse(a,ele);

	printf("After reverse\n");
	void arra(a,ele);
}
void reverse(int *a,int ele)
{
int i,j,t;
for(i=0,j=ele-1;i<j;i++,j--)
{
	t=a[i];
	a[i]=a[j];
	a[j]=t;
}
void array(int *a,int ele)
{
	int i;
	for(i=0;i<ele;i++)
	printf("%d",a[i]);
	printf("\n");
}

Write a program array bubble shorting?

#include<stdio.h>
void main()
{
	int a[5];
	int ele,i,j,t;
	ele=sizeof(a)/sizeof(a[0]);
	printf("Enter the array\n");
	for(i=0;i<ele;i++)
	scanf("%d",a+i);
	
	printf("Before sorting\n");
	for(i=0;i<ele;i++)
	printf("%d ",a[i]);
	printf("\n");

	for(i=0;i<ele-1;i++)
	{
	for(j=0;j<ele-1-i;j++)
	{
		if(a[j]>a[j+1])
	{
		t=a[j];
		a[j]=a[j+1];
		a[j+1]=t;
	}
	}
	}
		printf("After sorting\n");
	for(i=0;i<ele;i++)
	printf("%d ",a[i]);
	printf("\n");
}


Write a program sring reverse?

#include<stdio.h>
void reverse(char *);
void main()
{
	char str[100];
	printf("Enter the string\n");
	scanf("%s",str);
	reverse(str);
}
void reverse(char *p)
{
	int i,c=0;
	for(i=0;*(p+i)!='\0';i++)
	{
		c++;
	}

	printf("string reverse\n");
	for(i=c-1;i>=0;i--)
	{
	printf("%c",*(p+i));
	}
}


Write a program calculate the sring vowel?

#include<stdio.h>
void main()
{
 char str[100];
 int count=0,c=0;
	printf("Enter the string\n");
	scanf("%s",str);
	while(str[c]!='\0')
	{
		if(str[c]=='a' || str[c]=='e' ||  str[c]=='i' ||  str[c]=='o' ||  str[c]=='u' )
		count++;
		c++;
	}
	printf("%d",count);
}


Write a program find the factorial using recusion

#include<stdio.h>
int fact(int);
int main()
{
	int num,r;
	printf("Enter the number\n");
	scanf("%d",&num);
	r=fact(num);
	printf("%d",r);
}
int fact(int n)
{
	if(n)
	return n*fact(n-1);
	else
	return 1;
}

Write a program littel endain and big endian

#include<stdio.h>
union u
{
	char ch;
	int i;
};
void main()
{
	union u u1;
	u1.i=1;
	if(u1.ch=1)
	printf("littile\n");
	else
	printf("Big endian\n");
}

Write a program typedef?

#include<stdio.h>
typedef struct
{
	int x;
	int y;
}point;
void main()
{
  point p={10,20};
	printf("%d %d\n",p.x,p.y);
}

Write a program macro?

#include<stdio.h>
#define square(a) (a*a)
void main()
{
	int a;
	a=square(6);
	printf("%d",a);
}

WAP array reverse using pointer.
#include<stdio.h>
void reverse(int *);
int main()
{
    int a[5],i;
    printf("Enter the 10 element\n");
    for(i=0;i<5;i++)
    scanf("%d",&a[i]);
    reverse(a);
    return 0;
}
void reverse(int *p)
{
    int i;
    for(i=4;i>=0;i--)
    {
        printf("%d ",*(p+i));
    }
}


WAP using a single pointer and 2D array.

#include<stdio.h>
#include<stdlib.h>
void main()
{
    int r=3;
    int c=4;
    int *ptr=malloc((r*c)*sizeof(int));
    for(int i=0;i<r*c;i++)
    ptr[i]=i+1;
    for(int i=0;i<r;i++)
    {
        for(int j=0;j<c;j++)
        printf("%d ",ptr[i*c+j]);
        printf("\n");
    }
}


WAP using double pointer and one malloc.
#include<stdio.h>
#include<stdlib.h>

int main()
{
	int r=3, c=4, len=0;
	int *ptr, **arr;
	int count = 0,i,j;

	len = sizeof(int *) * r + sizeof(int) * c * r;
	arr = (int **)malloc(len);

	
	ptr = (int *)(arr + r);

	
	for(i = 0; i < r; i++)
		arr[i] = (ptr + c * i);

	for (i = 0; i < r; i++)
		for (j = 0; j < c; j++)
			arr[i][j] = ++count; 

	for (i = 0; i < r; i++)
		for (j = 0; j < c; j++)
			printf("%d ", arr[i][j]);

	return 0;
}



Design a structure to allocate a dynamic memory for 3 students base record.


#include <stdio.h>
#include <stdlib.h>

typedef struct {
    char name[50];
    int age;
    float gpa;
} Student;

int main() {
    int i;
    Student* students = (Student*)malloc(3 * sizeof(Student));

    if (students == NULL) {
        printf("Memory allocation failed!");
        return 1;
    }

    for (i = 0; i < 3; i++) {
        printf("Enter details for Student %d:\n", i + 1);
        printf("Name: ");
        scanf("%s", students[i].name);
        printf("Age: ");
        scanf("%d", &students[i].age);
        printf("GPA: ");
        scanf("%f", &students[i].gpa);
    }

    printf("\nStudent Records:\n");
    for (i = 0; i < 3; i++) {
        printf("Student %d:\n", i + 1);
        printf("Name: %s\n", students[i].name);
        printf("Age: %d\n", students[i].age);
        printf("GPA: %.2f\n\n", students[i].gpa);
    }

    free(students);

    return 0;
}




	

